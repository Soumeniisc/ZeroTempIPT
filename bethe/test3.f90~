! here we are creating a module for the global veriables and its defined in main program and will be used in all subroutines, including the main program.

! /home/soumen/INSTALLPACKAGES/mpich2/bin/mpif90 Global_mod.f90 grid.f90 ReadIn.f90 convolution.f90 ksum.f90 test3.f90

subroutine Initialisation()
	use Global
	implicit none
	integer i
	!real ab, area

	call ReadParams()


	!test function call
	!ab = area(3.,4.)
        !print*,"area", ab

	
	!writing in a file omega
	if (benchmark == 1) then
	open(unit=3,file='SigA.out',status='unknown')
	open(unit=4,file='SigB.out',status='unknown')
	do i=-nbin/2,nbin/2-1
         	!write(3,*) w(i), w(i)+1, w(i)+2, w(i)+3, w(i)+4
		write(3,*) w(i), 0.0, 0.0, 0.0, 0.0
		write(4,*) w(i), 0.0, 0.0, 0.0, 0.0
      	enddo
	close(3)
	close(4)
	end if !if (benchmark == 1)
	
	!guess self energy or ReadSigma()
	call ReadSigma()
	!do self consistency
	call FindGfBetheDosIntegration()
	
	
end subroutine Initialisation


subroutine WriteOutput()
	use Global
   	implicit none
	real*8 r1,r2,r3,r4,r5,r6
	integer info,io, nloop
   	integer i,j
	
	
	open(unit=3,file='GfA.out',status='unknown')
	open(unit=4,file='Sig.out',status='unknown')

	do i=-nbin/2,nbin/2-1
    	write(3,*) w(i), real(green(1,i)), imag(green(1,i)), real(green(2,i)), imag(green(2,i))
		write(4,*) w(i), real(Sigma(1,i)), imag(Sigma(1,i)), real(Sigma(2,i)), imag(Sigma(2,i))
   	enddo
	close(3)
	close(4)	
end subroutine WriteOutput

